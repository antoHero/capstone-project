{"version":3,"sources":["../../../api/v1/test/test.js"],"names":["chai","require","chaiHttp","app","use","expect","describe","it","done","user","firstname","lastname","email","password","gender","jobRole","department","address","request","post","set","send","end","err","res","status","to","deep","equal","body","data","include","id","get","should","have","property","userId","eql","updateUser","put","delete","response","title","article","be","an","user_id","articleID","server","comment","articleId","patch","tagId","authorId","gifs","gifUrl","requests","datePosted","gifId","updateGif","tile","updateArticle"],"mappings":"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","sourcesContent":["const chai = require('chai');\nconst chaiHttp = require('chai-http');\nrequire('chai/register-should');\nconst app = require('../../../app');\n\nchai.use(chaiHttp);\nconst { expect } = chai;\n\ndescribe('Testing the endpoints', () => {\n    it('It should create a user', (done) => {\n        const user = {\n            firstname: 'Akoke',\n            lastname: 'Anto',\n            email: 'veeqanto@gmail.com',\n            password: 'ajhggffgda',\n            gender: 'male',\n            jobRole: 'admin',\n            department: 'ict',\n            address: 'madalla'\n        };\n        chai.request(app)\n        .post('/api/v1/users/')\n        .set('Accept', 'application/json')\n        .send(user)\n        .end((err, res) => {\n            expect(res.status).to.deep.equal(201);\n            expect(res.body.data).to.include({\n                id: 1,\n                firstname: user.firstname,\n                lastname: user.lastname,\n                email: user.email,\n                password: user.password,\n                gender: user.gender,\n                jobRole: user.jobRole,\n                department: user.department,\n                address: user.address\n            });\n            done();\n        });\n    });\n\n    it('It should not create a user with incomplete form fields', (done) => {\n        const user = {\n            firstname: 'Akoke',\n            lastname: 'Anto',\n            email: 'veeqanto@gmail.com',\n            password: 'ajhggffgda',\n            gender: 'male',\n            jobRole: 'admin',\n            department: 'ict',\n        };\n        chai.request(app)\n        .post('/api/v1/users')\n        .set('Accept', 'application/json')\n        .send(user)\n        .end((err, res) => {\n            expect(res.status).to.equal(404);\n            done();\n        });\n    });\n\n    it('It should get all users', (done) => {\n        chai.request(app)\n        .get('/api/v1/users')\n        .set('Accept', 'application/json')\n        .end((err, res) => {\n            expect(res.status).to.equal(200);\n            res.body.data[0].should.have.property('id');\n            res.body.data[0].should.have.property('firstname');\n            res.body.data[0].should.have.property('lastname');\n            res.body.data[0].should.have.property('email');\n            res.body.data[0].should.have.property('password');\n            res.body.data[0].should.have.property('gender');\n            res.body.data[0].should.have.property('jobRole');\n            res.body.data[0].should.have.property('department');\n            res.body.data[0].should.have.property('address');\n            done();\n        });\n    });\n\n    it('It should get a particular user', (done) => {\n        const userId = 1;\n        chai.request(app)\n        .get('/api/v1/users/${userId}')\n        .set('Accept', 'application/json')\n        .end((err, res) => {\n            expect(res.status).to.equal(200);\n            res.body.should.have.property('message')\n            .eql('Cannot find user with the id ${userId}');\n            done();\n        });\n    });\n\n    it('It should not get a particular user with invalid id', (done) => {\n        const userId = 8888;\n        chai.request(app)\n        .get('/api/v1/users/${userId}')\n        .set('Accept', 'application/json')\n        .end((err, res) => {\n            expect(res.status).to.deep.equal(404);\n            //expect(res.body).to.eql('Cannot find the user with the id ${userId}');\n            \n            done();\n        });\n    });\n\n    it('It should not get specific user with non-numeric id', (done) => {\n        const userId = 'aaa';\n        chai.request(app)\n        .get('/api/v1/users/${userId}')\n        .set('Accept', 'application/json')\n        .end((err, res) => {\n            expect(res.status).to.deep.equal(404);\n            //expect(res.body).to.eql(`Please enter a numeric value`);\n            done();\n        });\n    });\n\n    it('It should update a user', (done) => {\n        const userId = 1;\n        const updateUser = {\n            id: userId,\n            firstname: 'Anto',\n            lastname: 'Anto',\n            email: 'veeqanto@gmail.com',\n            password: 'ajhggffgda',\n            gender: 'male',\n            jobRole: 'admin',\n            department: 'ict',\n        };\n        chai.request(app)\n        .put('/api/v1/users/${userId}')\n        .set('Accept', 'application/json')\n        .send(updateUser)\n        .end((err, res) => {\n            expect(res.status).to.equal(200);\n            expect(res.body.data.id).equal(updateUser.id);\n            expect(res.body.data.firstname).equal(updateUser.firstname);\n            expect(res.body.data.lastname).equal(updateUser.lastname);\n            expect(res.body.data.email).equal(updateUser.email);\n            expect(res.body.data.password).equal(updateUser.password);\n            expect(res.body.data.gender).equal(updateUser.gender);\n            expect(res.body.data.jobRole).equal(updateUser.jobRole);\n            expect(res.body.data.department).equal(updateUser.department);\n            expect(res.body.data.address).equal(updateUser.address);\n            done();\n        });\n    });\n\n    it('It should not update a user with invalid id', (done) => {\n        const userId = 9999;\n        const updateUser = {\n            id: userId,\n            firstname: 'Anto',\n            lastname: 'Anto',\n            email: 'veeqanto@gmail.com',\n            password: 'ajhggffgda',\n            gender: 'male',\n            jobRole: 'admin',\n            department: 'ict',\n        };\n        chai.request(app)\n        .put('/api/v1/users/${userId}')\n        .set('Accept', 'application/json')\n        .send(updateUser)\n        .end((err, res) => {\n            expect(res.status).to.equal(400);\n            res.body.should.have.property('message')\n            .eql('Cannot find user with the id ${userId}');\n            done();\n        });\n    });\n\n    it('It should not update a user with non numeric id', (done) => {\n        const userId = 'ggg';\n        const updateUser = {\n            id: userId,\n            firstname: 'Anto',\n            lastname: 'Anto',\n            email: 'veeqanto@gmail.com',\n            password: 'ajhggffgda',\n            gender: 'male',\n            jobRole: 'admin',\n            department: 'ict',\n        };\n        chai.request(app)\n        .put('/api/v1/users/${userId}')\n        .set('Accept', 'application/json')\n        .send(updateUser)\n        .end((err, res) => {\n            expect(res.status).to.equal(400);\n            res.body.should.have.property('message')\n            .eql('Input a valid numeric value');\n            done();\n        });\n    });\n\n    it('It should delete a user', (done) => {\n        const userId = 1;\n        chai.request(app)\n        .delete('/api/v1/users/${userId}')\n        .set('Accept', 'application/json')\n        .end((err, res) => {\n            expect(res.status).to.equal(200);\n            expect(res.body.data).to.include({});\n            done();\n        });\n    });\n\n    it('It should not delete a user with invalid id', (done) => {\n        const userId = 777;\n        chai.request(app)\n        .delete(`/api/v1/users/${userId}`)\n        .set('Accept', 'application/json')\n        .end((err, res) => {\n            expect(res.status).to.equal(404);\n            res.body.should.have.property('message')\n            .eql(`User with the id ${userId} cannot be found`);\n            done();\n        });\n    });\n\n    it('It should not delete a user with non-numeric id', (done) => {\n        const userId = 'gggg';\n        chai.request(app)\n        .delete(`/api/v1/users/${userId}`)\n        .set('Accept', 'application/json')\n        .end((err, res) => {\n            expect(res.status).to.equal(404);\n            res.body.should.have.property('message')\n            .eql(`Provide a numeric value`);\n            done();\n        });\n    });\n\n    /**Write unit tests for Article */\n    it('It should fail to create an article ', (done) => {\n        const data = {};\n        chai.request(app)\n          .post('/api/v1/articles')\n          .send(data)\n          .set('Accept', 'application/json')\n          .end((request, response) => {\n            expect(response.status).to.equal(422);\n            done();\n          });\n        \n      });\n\n      it('It should fail to create an article due database issues ', (done) => {\n        \n        chai.request(app)\n          .post('/api/v1/articles')\n          .send(data)\n          .set('Accept', 'application/json')\n          .end((request, response) => {\n            response.body.should.have.property('status')\n              .equal(501);\n              done();\n          });\n        \n      });\n\n      it('It should create an article', (done) => {\n        const data = {\n          title: 'Moonwalker',\n          article: 'Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim. Donec pede justo, fringilla vel, aliquet nec, vulputate eget, arcu. In enim justo, rhoncus ut, imperdiet a, venenatis vitae, justo. Nullam dictum felis eu pede mollis pretium. Integer tincidunt. Cras dapibus. Vivamus elementum semper nisi. Aenean vulputate eleifend tellus. Aenean leo ligula, porttitor eu, consequat vitae, eleifend ac, enim. Aliquam lorem ante, dapibus in, viverra quis, feugiat a, tellus. Phasellus viverra nulla ut metus varius laoreet. Quisque rutrum. Aenean imperdiet. Etiam ultricies nisi vel augue. Curabitur ullamcorper ultricies nisi. Nam eget dui.',\n        };\n        chai.request(app)\n          .post('/api/v2/articles')\n          .send(data)\n          .set('Accept', 'application/json')\n          .end((request, response) => {\n            expect(response.status).to.deep.equal(201);\n            response.body.should.have.property('message')\n              .equal('Article successfully created');\n            response.body.should.have.property('data');\n            response.body.data.should.be.an('Object');\n            \n            response.body.data.should.have.property('title')\n              .equal(data.title);\n              response.body.data.should.have.property('article')\n              .equal(data.article);\n              response.body.data.should.have.property('datePosted');\n              response.body.data.should.have.property('user_id')\n              .equal(data.user_id);\n              done();\n          });\n        \n      });\n    \n      it('It should not find article', (done) => {\n        const articleID = -1;\n        chai.request(app)\n          .get(`/api/v1/articles/${articleID}`)\n          .set('Accept', 'application/json')\n          .end((request, response) => {\n            expect(response.status).to.deep.equal(404);\n            response.body.should.have.property('message')\n              .equal('Article not found !');\n              done();\n          });\n        \n      });\n    \n      it('It should find article', (done) => {\n        const articleID = 1;\n        chai.request(app)\n          .get(`/api/v1/articles/${articleID}`)\n          .set('Accept', 'application/json')\n          .end((request, response) => {\n            response.body.should.have.property('status')\n              .equal(200);\n            response.body.should.have.property('message')\n              .equal('Article found !');\n            response.body.should.have.property('data');\n            response.body.data.should.be.an('Object');\n          });\n        done();\n      });\n    \n      it('should get feeds', (done) => {\n        chai.request(server)\n          .get('/api/v1/feeds')\n          .set('Accept', 'application/json')\n          .end((request, response) => {\n            response.body.should.have.property('status')\n              .equal(200);\n            response.body.should.have.property('message')\n              .equal('Success');\n            response.body.should.have.property('data');\n          });\n        done();\n      });\n    \n      it('It should delete article', (done) => {\n        const articleID = 1;\n        chai.request(app)\n          .delete(`/api/v1/articles/${articleID}`)\n          .set('Accept', 'application/json')\n          .end((request, response) => {\n            response.status.should.equal(204);\n          });\n        done();\n      });\n    \n      it('It should fail to delete article', (done) => {\n        const articleID = 9;\n        chai.request(app)\n          .delete(`/api/v1/articles/${articleID}`)\n          .set('Accept', 'application/json')\n          .end((request, response) => {\n            response.body.should.have.property('status')\n              .equal(404);\n            response.body.should.have.property('message')\n              .equal('Article Not Found !!');\n          });\n        done();\n      });\n    \n      it('It should fail to add comment', (done) => {\n        const comment = '';\n        const articleId = 4;\n        chai.request(app)\n          .post(`/api/v1/articles/${articleId}/comments`)\n          .set('Accept', 'application/json')\n          .send({ comment })\n          .end((request, response) => {\n            response.body.should.have.property('status')\n              .equal(422);\n          });\n        done();\n      });\n    \n      it('It should add a comment', (done) => {\n        const comment = 'This is what i used to say to people and they didn\\'t believe me !!';\n        const articleId = 1;\n        chai.request(app)\n          .post(`/api/v1/articles/${articleId}/comments`)\n          .set('Accept', 'application/json')\n          .send({ comment })\n          .end((request, response) => {\n            response.body.should.have.property('status')\n              .equal(201);\n            response.body.should.have.property('message').equal('Comment successfully added.');\n            response.body.data.should.have.property('comment').equal(comment);\n          });\n        done();\n      });\n    \n      it('It should fail to update article', (done) => {\n        const articleId = 800;\n        const data = {\n          title: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer nec odio. Praesent libero. Sed cursus ante dapibus diam.',\n          article: 'Etiam rhoncus. Maecenas tempus, tellus eget condimentum rhoncus, sem quam semper libero, sit amet adipiscing sem neque sed ipsum. Nam quam nunc, blandit vel, luctus pulvinar, hendrerit id, lorem. Maecenas nec odio et ante tincidunt tempus. Donec vitae sapien ut libero venenatis faucibus. Nullam quis ante. Etiam sit amet orci eget eros faucibus tincidunt. Duis leo. Sed fringilla mauris sit amet nibh. Donec sodales sagittis magna. Sed consequat, leo eget bibendum sodales, augue velit cursus nunc, quis gravida magna mi a libero. Fusce vulputate eleifend sapien. Vestibulum purus quam, scelerisque ut, mollis sed, nonummy id, metus. Nullam accumsan lorem in dui. Cras ultricies mi eu turpis hendrerit fringilla. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; In ac dui quis mi consectetuer lacinia.',\n        };\n        chai.request(app)\n          .put(`/api/v1/articles/${articleId}`)\n          .set('Accept', 'application/json')\n          .send(data)\n          .end((request, response) => {\n            response.body.should.have.property('status')\n              .equal(404);\n            response.body.should.have.property('message').equal('Article not found !');\n          });\n        done();\n      });\n    \n      it('It should fail to update article', (done) => {\n        const articleId = 1;\n        chai.request(app)\n          .patch(`/api/v1/articles/${articleId}`)\n          .set('Accept', 'application/json')\n          .send({})\n          .end((request, response) => {\n            response.body.should.have.property('status')\n              .equal(422);\n          });\n        done();\n      });\n    \n      it('It should edit article', (done) => {\n        const articleId = 1;\n        const data = {\n          title: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer nec odio. Praesent libero. Sed cursus ante dapibus diam.',\n          article: 'Nam pretium turpis et arcu. Duis arcu tortor, suscipit eget, imperdiet nec, imperdiet iaculis, ipsum. Sed aliquam ultrices mauris. Integer ante arcu, accumsan a, consectetuer eget, posuere ut, mauris. Praesent adipiscing. Phasellus ullamcorper ipsum rutrum nunc. Nunc nonummy metus. Vestibulum volutpat pretium libero. Cras id dui. Aenean ut eros et nisl sagittis vestibulum. Nullam nulla eros, ultricies sit amet, nonummy id, imperdiet feugiat, pede. Sed lectus. Donec mollis hendrerit risus. Phasellus nec sem in justo pellentesque facilisis. Etiam imperdiet imperdiet orci. Nunc nec neque. Phasellus leo dolor, tempus non, auctor et, hendrerit quis, nisi.',\n        };\n        chai.request(app)\n          .patch(`/api/v1/articles/${articleId}`)\n          .set('Accept', 'application/json')\n          .send(data)\n          .end((request, response) => {\n            response.body.should.have.property('status')\n              .equal(200);\n            response.body.should.have.property('message')\n              .equal('Article successfully edited');\n            response.body.should.have.property('data');\n            response.body.data.should.be.an('Object');\n            response.body.data.should.have.property('title')\n              .equal(data.title);\n            response.body.data.should.have.property('article')\n              .equal(data.article);\n          });\n        done();\n      });\n    \n      it('It should not find article, wrong tag', () => {\n        const tagId = 100;\n        chai.request(app)\n          .get(`/api/v1/feeds/${tagId}/tags`)\n          .set('Accept', 'application/json')\n          .end((request, response) => {\n            response.body.should.have.property('status')\n              .equal(404);\n            response.body.should.have.property('message')\n              .equal('No articles found !');\n          });\n      });\n    \n      it('It should find articles by tag', () => {\n        const tagId = 1;\n        chai.request(app)\n          .get(`/api/v1/feeds/${tagId}/tags`)\n          .set('Accept', 'application/json')\n          .end((request, response) => {\n            response.body.should.have.property('status')\n              .equal(200);\n            response.body.should.have.property('message')\n              .equal('Success');\n            response.body.data.should.be.an('Array');\n          });\n      });\n    \n      it('It should not find articles by author', () => {\n        const authorId = 0;\n        chai.request(app)\n          .get(`/api/v1/author/articles/${authorId}`)\n          .set('Accept', 'application/json')\n          .end((request, response) => {\n            response.body.should.have.property('status')\n              .equal(404);\n            response.body.should.have.property('message')\n              .equal('No articles found !');\n          });\n      });\n    \n      it('It should find articles by author', () => {\n        const authorId = 1;\n        chai.request(app)\n          .get(`/api/v1/author/articles/${authorId}`)\n          .set('Accept', 'application/json')\n          .end((request, response) => {\n            response.body.should.have.property('status')\n              .equal(200);\n            response.body.should.have.property('message')\n              .equal('Success');\n            response.body.data.should.be.an('Array');\n          });\n      });    \n\n    /** Test the gif endpoints */\n\nit('It should create an gif', (done) => {\n        const gifs = {\n            title: 'The life of Pi',\n            gifUrl: 'skjkjjhjfhjshfjhsjk',\n            user_id: 2\n        };\n        chai.requests(app)\n        .post('/api/v1/gifs')\n        .set('Accept', 'application/json')\n        .send(user)\n        .end((err, res) => {\n            expect(res.status).to.equal(201);\n            expect(res.body.data).to.include({\n                id: 1,\n                title: gifs.title,\n                datePosted: gifs.gifUrl,\n                user_id: gifs.user_id\n            });\n            done();\n        });\n    });\n\n    it('It should not create a gif with incomplete form fields', (done) => {\n        const gifs = {\n            title: 'The life of Pi',\n            user_id: 2\n        };\n        chai.request(app)\n        .post('/api/v1/gifs')\n        .set('Accept', 'application/json')\n        .send(gifs)\n        .end((err, res) => {\n            expect(res.status).to.equal(400);\n            done();\n        });\n    });\n\n    it('It should get all gifs', (done) => {\n        chai.request(app)\n        .get('/api/v1/gifs')\n        .set('Accept', 'application/json')\n        .end((err, res) => {\n            expect(res.status).to.equal(200);\n            res.body.data[0].should.have.property('id');\n            res.body.data[0].should.have.property('title');\n            res.body.data[0].should.have.property('gifUrl');\n            res.body.data[0].should.have.property('user_id');\n            done();\n        });\n    });\n\n    it('It should get a particular gif', (done) => {\n        const gifId = 1;\n        chai.request(app)\n        .get('/api/v1/gifs/${gifId}')\n        .set('Accept', 'application/json')\n        .end((err, res) => {\n            expect(res.status).to.equal(200);\n            res.body.data[0].should.have.property('id');\n            res.body.data[0].should.have.property('title');\n            res.body.data[0].should.have.property('gifUrl');\n            res.body.data[0].should.have.property('user_id');\n            done();\n        });\n    });\n\n    it('It should not get a particular gif with invalid id', (done) => {\n        const gifId = 88888888;\n        chai.request(app)\n        .get('/api/v1/gifs/${gifId}')\n        .set('Accept', 'application/json')\n        .end((err, res) => {\n            expect(res.status).to.equal(404)\n            .res.body.should.have.property('message')\n            .eql('Cannot find gif with the id ${gifId}');\n            done();\n        });\n    });\n\n    it('It should not get specific gif with non-numeric id', (done) => {\n        const gifId = 'aasd';\n        chai.request(app)\n        .get('/api/v1/gifs/${gifid}')\n        .set('Accept', 'application/json')\n        .end((err, res) => {\n            expect(res.status).to.equal(404);\n            res.body.should.have.property('message')\n            .eql('Please input a numeric value');\n            done();\n        });\n    });\n\n    it('It should update a gif', (done) => {\n        const gifId = 1;\n        const updateGif = {\n            id: gifId,\n            title: 'The life of pie',\n            gifUrl: 'hghf hghghgas gvvvhjvhd',\n            user_id: 2\n        };\n        chai.request(app)\n        .put('/api/v1/gifs/${gifId}')\n        .set('Accept', 'application/json')\n        .send(updateGif)\n        .end((err, res) => {\n            expect(res.status).to.equal(200);\n            expect(res.body.data.id).equal(updateGif.id);\n            expect(res.body.data.title).equal(updateGif.title);\n            expect(res.body.data.gifUrl).equal(updateGif.gifUrl);\n            done();\n        });\n    });\n\n    it('It should not update a gif with invalid id', (done) => {\n        const gifId = 9999;\n        const updateGif = {\n            id: gifId,\n            title: 'The life of Pi',\n            gifUrl: 'ajkjdj jkjkdj @gmail.com',\n            user_id: 2\n        };\n        chai.request(app)\n        .put('/api/v1/gifs/${gifId}')\n        .set('Accept', 'application/json')\n        .send(updateUser)\n        .end((err, res) => {\n            expect(res.status).to.equal(400);\n            res.body.should.have.property('message')\n            .eql('Cannot find gif with the id ${gifId}');\n            done();\n        });\n    });\n\n    it('It should not update a gif with non numeric id', (done) => {\n        const gifId = 'ggg';\n        const updateGif = {\n            id: gifId,\n            tile: 'The life of Pi',\n            gifUrl: 'Anto',\n            user_id: 2\n        };\n        chai.request(app)\n        .put('/api/v1/gifs/${gifId}')\n        .set('Accept', 'application/json')\n        .send(updateArticle)\n        .end((err, res) => {\n            expect(res.status).to.equal(400);\n            res.body.should.have.property('message')\n            .eql('Input a valid numeric value');\n            done();\n        });\n    });\n\n    it('It should delete a gif', (done) => {\n        const gifId = 1;\n        chai.request(app)\n        .delete('/api/v1/gifs/${gifId}')\n        .set('Accept', 'application/json')\n        .end((err, res) => {\n            expect(res.status).to.equal(200);\n            expect(res.body.data).to.include({});\n            done();\n        });\n    });\n\n    it('It should not delete a gif with invalid id', (done) => {\n        const gifId = 777;\n        chai.request(app)\n        .delete(`/api/v1/gifs/${gifId}`)\n        .set('Accept', 'application/json')\n        .end((err, res) => {\n            expect(res.status).to.equal(404);\n            res.body.should.have.property('message')\n            .eql(`Gif with the id ${gifId} cannot be found`);\n            done();\n        });\n    });\n\n    it('It should not delete a gif with non-numeric id', (done) => {\n        const gifId = 'gggg';\n        chai.request(app)\n        .delete(`/api/v1/gifs/${gifId}`)\n        .set('Accept', 'application/json')\n        .end((err, res) => {\n            expect(res.status).to.equal(404);\n            res.body.should.have.property('message')\n            .eql(`Provide a numeric value`);\n            done();\n        });\n    });\n})"],"file":"test.js"}
{"version":3,"sources":["../../../api/v1/controllers/Helper.js"],"names":["bcrypt","require","jwt","Helper","hashPassword","password","hashSync","genSaltSync","comparePassword","compareSync","emailIsValid","email","test","generateToken","id","token","sign","userId","process","env","SECRET","expiresIn","module","exports"],"mappings":"AAAA;;;AAIA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAMC,GAAG,GAAGD,OAAO,CAAC,cAAD,CAAnB;;AAEA,MAAME,MAAM,GAAG;AACX;AACAC,EAAAA,YAAY,CAACC,QAAD,EAAW;AACnB,WAAOL,MAAM,CAACM,QAAP,CAAgBD,QAAhB,EAA0BL,MAAM,CAACO,WAAP,CAAmB,CAAnB,CAA1B,CAAP;AACH,GAJU;;AAMX;AAEAC,EAAAA,eAAe,CAACJ,YAAD,EAAeC,QAAf,EAAyB;AACpC,WAAOL,MAAM,CAACS,WAAP,CAAmBJ,QAAnB,EAA6BD,YAA7B,CAAP;AACH,GAVU;;AAYX;AAEAM,EAAAA,YAAY,CAACC,KAAD,EAAQ;AAChB,WAAO,eAAeC,IAAf,CAAoBD,KAApB,CAAP;AACH,GAhBU;;AAkBX;AAEAE,EAAAA,aAAa,CAACC,EAAD,EAAK;AACd,UAAMC,KAAK,GAAGb,GAAG,CAACc,IAAJ,CAAS;AACnBC,MAAAA,MAAM,EAAEH;AADW,KAAT,EAGdI,OAAO,CAACC,GAAR,CAAYC,MAHE,EAGM;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAHN,CAAd;AAKH;;AA1BU,CAAf;AA6BAC,MAAM,CAACC,OAAP,GAAiBpB,MAAjB","sourcesContent":["/**\n * We will encrypt our passwords and use jsonwebtoken in this class\n */\n\nconst bcrypt = require('bcrypt');\nconst jwt = require('jsonwebtoken');\n\nconst Helper = {\n    //**Hash Password */\n    hashPassword(password) {\n        return bcrypt.hashSync(password, bcrypt.genSaltSync(8))\n    },\n\n    //**Compare passwords */\n\n    comparePassword(hashPassword, password) {\n        return bcrypt.compareSync(password, hashPassword);\n    },\n\n    //**Check if Password is valid */\n\n    emailIsValid(email) {\n        return /\\S+@\\S+\\.\\S+/.test(email);\n    },\n\n    //**Generate Token */\n\n    generateToken(id) {\n        const token = jwt.sign({\n            userId: id\n        },\n        process.env.SECRET, { expiresIn: '7d' }\n        );\n    }\n}\n\nmodule.exports = Helper;"],"file":"Helper.js"}